name: Release

on:
  push:
    branches:
      - "*"
    tags:
      - v*

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [ vet, test ]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: ${{ matrix.step }}
        run: make ${{ matrix.step }}

  build:
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: build
        run: make build

  publish:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: netzaffe/example
          tags: |
            type=ref,event=branch,pattern=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
          flavor: |
            latest=true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v2
#        with:
#          version: latest
#          args: release --rm-dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}